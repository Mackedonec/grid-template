/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}
.header-menu__container, .header-content__container{
  width:min(100% - 40px, 1300px);
  margin-inline:auto;
}

*,
*::before,
*::after{
  box-sizing:border-box;
}

html{
  overflow-y:scroll;
  font-family:"Roboto", sans-serif;
  font-size:16px;
}

body{
  color:#637588;
  background-color:#ffffff;
}

h1{
  letter-spacing:0.079em;
  font-family:"Roboto Slab", serif;
  font-size:3.75rem;
  font-weight:300;
  line-height:1.2em;
}

h2{
  font-family:"Roboto Slab", serif;
}

h3{
  font-family:"Roboto", sans-serif;
}

a{
  text-decoration:none;
  color:#ffffff;
}

.btn{
  display:flex;
  align-items:center;
  justify-content:center;
  padding:0.5em 1em;
  transition:background-color 0.25s;
  letter-spacing:0.1em;
  border-width:2px;
  border-style:solid;
}
.btn:hover{
  background-color:#d66926;
}
.btn--light{
  border-color:#ffffff;
  background-color:rgba(255, 255, 255, 0.1);
}
.btn--primary{
  min-width:350px;
  min-height:60px;
  border-color:#2d3651;
  background-color:rgba(45, 54, 81, 0.8);
  font-size:1.125rem;
}

.visually-hidden{
  position:absolute;
  overflow:hidden;
  clip:rect(0 0 0 0);
  width:1px;
  height:1px;
  margin:-1px;
  padding:0;
  white-space:nowrap;
  border:0;
  clip-path:inset(100%);
}

.header{
  position:relative;
  display:grid;
  align-items:center;
  min-height:100vh;
  padding:150px 0;
  color:#ffffff;
  background-color:#2d3651;
  background-image:url(../img/img-header.png);
  background-position:50% 50%;
  background-size:cover;
}

.header-content{
  position:relative;
  z-index:1;
}
.header-content__title{
  text-align:center;
}
.header-content__actions{
  display:flex;
  justify-content:center;
  gap:20px;
}

.header-logo{
  letter-spacing:0.22em;
  font-size:1.5rem;
}
.header-logo__link{
  display:block;
  padding:20px 20px 20px 0;
}
.header-logo .header-logo__accent{
  display:inline-block;
  margin-right:4px;
  padding:14px 1px 13px 5px;
  border:3px solid #d53d27;
}

.header-menu{
  position:absolute;
  z-index:2;
  top:0;
  right:0;
  left:0;
}
.header-menu__container{
  display:grid;
  align-items:center;
  grid-template-columns:auto 1fr;
}

.header-navbar__btn{
  position:relative;
  width:30px;
  height:22px;
  margin:10px 0 10px auto;
  cursor:pointer;
  transition:0.5s ease-in-out;
  transform:rotate(0deg);
}
.header-navbar__btn-row{
  position:absolute;
  display:block;
  width:50%;
  height:3px;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  background:#ffffff;
}
.header-navbar__btn-row:nth-child(even){
  left:50%;
  border-radius:0 3px 3px 0;
}
.header-navbar__btn-row:nth-child(odd){
  left:0;
  border-radius:3px 0 0 3px;
}
.header-navbar__btn-row:nth-child(1), .header-navbar__btn-row:nth-child(2){
  top:0;
}
.header-navbar__btn-row:nth-child(3), .header-navbar__btn-row:nth-child(4){
  top:9px;
}
.header-navbar__btn-row:nth-child(5), .header-navbar__btn-row:nth-child(6){
  top:18px;
}
.header-navbar__btn.active span:nth-child(1), .header-navbar__btn.active span:nth-child(6){
  transform:rotate(45deg);
}
.header-navbar__btn.active span:nth-child(2), .header-navbar__btn.active span:nth-child(5){
  transform:rotate(-45deg);
}
.header-navbar__btn.active span:nth-child(1){
  top:3px;
  left:2px;
}
.header-navbar__btn.active span:nth-child(2){
  top:3px;
  left:calc(50% - 2px);
}
.header-navbar__btn.active span:nth-child(3){
  left:-50%;
  opacity:0;
}
.header-navbar__btn.active span:nth-child(4){
  left:100%;
  opacity:0;
}
.header-navbar__btn.active span:nth-child(5){
  top:14px;
  left:2px;
}
.header-navbar__btn.active span:nth-child(6){
  top:14px;
  left:calc(50% - 2px);
}
.header-navbar__link{
  display:block;
  letter-spacing:0.091em;
  font-size:1.125rem;
}
.header-navbar__link:hover, .header-navbar__link:focus{
  color:#d66926;
}

.header-overlay{
  position:absolute;
  opacity:0.8;
  background-color:#2d3651;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}

.skill-item{
  position:relative;
  overflow:hidden;
}
.skill-item__title{
  z-index:1;
  margin:0;
  letter-spacing:0.1em;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.skill-item__link{
  display:flex;
  align-items:center;
  justify-content:center;
  padding:20px;
  transition:color 0.5s;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.skill-item__image{
  transition:transform 0.5s;
  background-color:#2d3651;
  background-repeat:no-repeat;
  background-position:50% 50%;
  background-size:cover;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.skill-item__overlay{
  transition:opacity 0.5s;
  opacity:0.8;
  position:absolute;
  top:0;
  right:0;
  bottom:0;
  left:0;
}
.skill-item:hover .skill-item__overlay{
  opacity:0.95;
}
.skill-item:hover .skill-item__image{
  transform:scale(1.1);
}
.skill-item:hover .skill-item__link{
  color:#d66926;
}

.skill-item:nth-of-type(1){
  grid-area:i1;
}

.skill-item:nth-of-type(2){
  grid-area:i2;
}

.skill-item:nth-of-type(3){
  grid-area:i3;
}

.skill-item:nth-of-type(4){
  grid-area:i4;
}

.skill-item:nth-of-type(5){
  grid-area:i5;
}

.skill-item:nth-of-type(6){
  grid-area:i6;
}

.skill-item:nth-of-type(7){
  grid-area:i7;
}

.skill-item:nth-of-type(8){
  grid-area:i8;
}

.skill-item:nth-of-type(9){
  grid-area:i9;
}
.skills__container{
  display:grid;
  margin-bottom:20px;
}
.skills__actions{
  display:flex;
  justify-content:center;
}

.about__container{
  background-color:#e5e5e5;
}

@media (min-width: 576px){
  .btn--primary{
    min-width:350px;
  }
  .skills{
    padding:10px;
  }
  .skills__container{
    gap:10px;
  }
  .skills__actions{
    margin-bottom:40px;
  }
}

@media (min-height: 601px){
  .skills__container{
    grid-auto-rows:calc(33.3333vh - 13.3333333333px);
  }
}

@media (min-width: 768px){
  .header-navbar__btn{
    display:none;
  }
  .header-navbar__list{
    display:grid;
    justify-content:end;
    gap:20px;
    grid-template-columns:repeat(auto-fit, minmax(30px, max-content));
    margin:0 -10px 0 0;
    padding:0;
    list-style:none;
  }
  .header-navbar__link{
    padding:20px 10px;
  }
  .skill-item__title{
    font-size:1.25rem;
  }
}

@media (min-width: 992px){
  h1{
    font-size:3.75rem;
  }
  .btn--light{
    min-width:250px;
    min-height:60px;
    font-size:1.125rem;
  }
  .header-content__title{
    margin:0 0 52px;
  }
  .skills__container{
    grid-template-areas:"i1 i1 i2 i3" "i4 i5 i5 i6" "i7 i8 i9 i6";
    grid-template-columns:repeat(4, 1fr);
  }
}

@media (max-width: 991.8px) and (min-width: 768px){
  h1{
    font-size:40px;
  }
  .btn--light{
    min-width:200px;
    min-height:50px;
  }
  .header-content__title{
    margin:0 0 42px;
  }
  .skills__container{
    grid-template-areas:"i1 i1 i2 " "i3 i4 i4" "i5 i5 i6" "i7 i8 i6" "i7 i9 i9";
    grid-template-columns:repeat(3, 1fr);
  }
}

@media (max-width: 767.8px){
  h1{
    font-size:30px;
  }
  .btn--light{
    min-width:170px;
    min-height:40px;
  }
  .header-content__title{
    margin:0 0 32px;
  }
  .header-menu{
    background-color:rgba(68, 89, 110, 0.25);
    box-shadow:-3px 3px 20px -10px black;
  }
  .header-navbar__list{
    position:absolute;
    top:100%;
    right:20px;
    display:none;
    text-align:right;
    background-color:rgba(68, 89, 110, 0.95);
    box-shadow:-3px 3px 20px -10px black;
    margin:0;
    padding:0;
    list-style:none;
  }
  .header-navbar__item{
    margin:20px 10px;
  }
  .header-navbar__link{
    padding:10px 20px;
  }
  .skill-item__title{
    font-size:1.125rem;
  }
}

@media (max-width: 767.8px) and (min-width: 576px){
  .skills__container{
    grid-template-areas:"i1 i2" "i3 i2" "i4 i4" "i5 i6" "i5 i7" "i8 i9";
    grid-template-columns:repeat(2, 1fr);
  }
}

@media (max-height: 600px){
  .skills__container{
    grid-auto-rows:calc(230px - 13.3333333333px);
  }
}

@media (max-width: 575.8px){
  .btn--primary{
    min-width:100%;
  }
  .header-content__actions{
    align-items:center;
    flex-direction:column;
  }
  .skills{
    padding:20px;
  }
  .skills__container{
    gap:20px;
    grid-template-areas:"i1" "i2" "i3" "i4" "i5" "i6" "i7" "i8" "i9";
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */